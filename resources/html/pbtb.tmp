<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
	<title>Preferences: Advanced</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel="icon" href="../img/icon.ico" type="image/vnd.microsoft.icon" />
	<link rel="stylesheet" href="../style.css" type="text/css" />
<style> table, td, th { border-color: #cccccc; border-style: solid; } table { border-width: 0 0 1px 1px; border-spacing: 0px; border-collapse: collapse; } td { border-width: 1px; } th { border-width: 1px; } </style></head>
<body>
	<div id="wrapper">
		<div class="navi" id="naviTop">
			<ul>
				<li><a href="AppendixA_02_11.html">&laquo;&nbsp; Previous</a></li>
				<li><a href="AppendixA_02_12_01.html">Next &nbsp;&raquo;</a></li>
			</ul>
		</div>
		<div id="header">
			<a href="../index.html">&micro;Torrent User Manual</a> &gt;
			<a href="AppendixA.html">Appendix A: The &micro;Torrent Interface</a> &gt;
			<a href="AppendixA_02.html">Preferences</a>
			<h1>Advanced</h1>
		</div>
		<div id="content">

<ul>
	<li><a href="AppendixA_02_12_01.html">UI Extras</a></li>
	<li><a href="AppendixA_02_12_02.html">Disk Cache</a></li>
</ul>

<p><a class="name" id="WARNING" href="#WARNING">WARNING</a>: Unless you fully understand the consequences of changing an advanced setting, you should not modify it without guidance.</p>
<ul class="uienum">
	<li><a class="name" id="allow_pairing" href="#allow_pairing">allow_pairing</a>: Similar in concept to BlueTooth pairing, this option allows any external application programmatically request a unique login password so that the application can more easily obtain access to Web UI with minimal user interaction. The user must explicitly give &micro;Torrent permission to generate a login password for each application that requests it. For security reasons, pairing is allowed only for applications running on the same machine as the instance of &micro;Torrent it is attempting to pair up with. Pairing does not work unless <a href="#net.discoverable">net.discoverable</a> is enabled.</li>
	<li><a class="name" id="bt.allow_same_ip" href="#bt.allow_same_ip">bt.allow_same_ip</a>: Enabling this option allows multiple incoming connections from the same IP address. This option affects a single torrent job at a time, so you can still have the same IP address connect to you on different torrent swarms. It is recommended that this option be left disabled, as it weakens the anti-leech protection.</li>
	<li><a class="name" id="bt.ban_ratio" href="#bt.ban_ratio">bt.ban_ratio</a>: The lowest acceptable ratio of good to bad pieces a peer can send before it gets banned. The lower this option is set, the more forgiving &micro;Torrent will be toward bad pieces, meaning that it will be less likely to ban a peer. This takes effect after <a href="#bt.ban_threshold">bt.ban_threshold</a> is exceeded and <a href="#bt.use_ban_ratio">bt.use_ban_ratio</a> is enabled.</li>
	<li><a class="name" id="bt.ban_threshold" href="#bt.ban_threshold">bt.ban_threshold</a>: This option specifies the maximum number of hashfailed pieces any single peer can send before &micro;Torrent takes action against it (either banning it outright, or enforcing <a href="#bt.ban_ratio">bt.ban_ratio</a> if <a href="#bt.use_ban_ratio">bt.use_ban_ratio</a> is enabled).</li>
	<li><a class="name" id="bt.compact_allocation" href="#bt.compact_allocation">bt.compact_allocation</a>: Enabling this option allows &micro;Torrent to create files in a manner such that the data are incrementally written to disk without file pre-allocation. Because writes are compact, enabling this option may potentially lead to an increased level of disk fragmentation while the file remains incomplete. In addition, this option further decreases the already-low probability that a file can be previewed before completion, since it may write the data for in-progress files out of order. Here are some things to take note of when using this option:
		<ul class="sublist">
			<li>If you tell &micro;Torrent to <a href="AppendixA_02_01.html#When_Downloading.Pre-allocate_all_files">pre-allocate all disk space</a>, this option is ignored, and &micro;Torrent will pre-allocate the file anyway.</li>
			<li>If this option is enabled, files <a href="AppendixA_01_05_05.html#Context_Menu.Dont_Download">can't be skipped</a>. If a torrent job has skipped files, it will not use compact allocation.</li>
		</ul>
	</li>
	<li><a class="name" id="bt.connect_speed" href="#bt.connect_speed">bt.connect_speed</a>: This option specifies the number of connections &micro;Torrent should allow to be attempted and/or established each second, whether the connections use uTP or TCP.</li>
	<li><a class="name" id="bt.enable_tracker" href="#bt.enable_tracker">bt.enable_tracker</a>: Enabling this option enables the rudimentary tracker embedded in &micro;Torrent. If you wish to use this tracker, the URL is located at <span class="value">http://IP:port/announce</span>, where <span class="value">IP</span> is your WAN IP address, and <span class="value">port</span> is <a href="AppendixA_02_04.html#Listening_Port.Port_used_for_incoming_connections">the port &micro;Torrent is listening on</a> (or the <a href="AppendixA_02_10.html#Connectivity.Alternative_listening_port">alternative listening port</a> if set and enabled). If you use a dynamic DNS service, your domain may be used instead of your IP address. The embedded tracker allows tracking of external .torrent files, and provides no way to limit them. There is no interface for viewing the .torrent files that are tracked. It is imperative that &micro;Torrent is able to listen for incoming connections for this feature to work properly, so you have to make sure you have completely forwarded your ports in order to use the embedded tracker.</li>
	<li><a class="name" id="bt.graceful_shutdown" href="#bt.graceful_shutdown">bt.graceful_shutdown</a>: If enabled, &micro;Torrent will take as long as it needs to finish its shutdown sequence (writing in-progress pieces to disk, deleting files in deletion queue, and waiting for tracker replies to stop messages -- among other things). That means that even if it takes several minutes to shutdown gracefully, it will wait for that long, and the process will remain in memory until then. If disabled, &micro;Torrent will limit how long it waits to to <span class="value">10</span> seconds, and regardless of the state of the shutdown sequence, &micro;Torrent will force itself to exit.</li>
	<li><a class="name" id="bt.multiscrape" href="#bt.multiscrape">bt.multiscrape</a>: Enabling this option allows &micro;Torrent to send multiple hashes each time it scrapes a tracker, which is more efficient than sending one hash at a time. In most circumstances, this option should not need to be disabled, as &micro;Torrent will fall back to single scraping if it detects that the tracker does not support multi-scraping.</li>
	<li><a class="name" id="bt.no_connect_to_services" href="#bt.no_connect_to_services">bt.no_connect_to_services</a>: This option tells &micro;Torrent not to connect to peers using ports specified in <a href="#bt.no_connect_to_services_list">bt.no_connect_to_services_list</a> as their listening ports. This stops firewalls from complaining about &micro;Torrent trying to send an e-mail.</li>
	<li><a class="name" id="bt.no_connect_to_services_list" href="#bt.no_connect_to_services_list">bt.no_connect_to_services_list</a>: This option specifies which ports &micro;Torrent should not connect to when <a href="#bt.no_connect_to_services">bt.no_connect_to_services</a> is enabled.</li>
	<li><a class="name" id="bt.prio_first_last_piece" href="#bt.prio_first_last_piece">bt.prio_first_last_piece</a>: Enabling this option prioritizes the first and last pieces of each file in a torrent job, increasing the chances that they can be previewed before download completion. &micro;Torrent will prioritize at least the first and last <span class="value">1</span> MiB of data in a file.</li>
	<li><a class="name" id="bt.ratelimit_tcp_only" href="#bt.ratelimit_tcp_only">bt.ratelimit_tcp_only</a>: Enabling this option tells &micro;Torrent to limit the upload and download rates for TCP connections based on information received over the uTP transport rather than using static global rate limits. This option is ignored if <a href="#bt.tcp_rate_control">bt.tcp_rate_control</a> is disabled.</li>
	<li><a class="name" id="bt.scrape_stopped" href="#bt.scrape_stopped">bt.scrape_stopped</a>: Enabling this option allows &micro;Torrent to get seed and peer counts for torrent jobs that are stopped.</li>
	<li><a class="name" id="bt.send_have_to_seed" href="#bt.send_have_to_seed">bt.send_have_to_seed</a>: Enabling this option tells &micro;Torrent to send a message to other seeds indicating how many pieces you currently have.</li>
	<li><a class="name" id="bt.set_sockbuf" href="#bt.set_sockbuf">bt.set_sockbuf</a>: This debugging option allows &micro;Torrent to automatically detect the TCP buffer size periodically (<span class="value">so_sndbuf</span>) and adjust it based on your upload speed. It does not adjust based on latency.</li>
	<li><a class="name" id="bt.shutdown_tracker_timeout" href="#bt.shutdown_tracker_timeout">bt.shutdown_tracker_timeout</a>: This option controls the maximum amount of time &micro;Torrent will wait, when exiting, for each tracker to respond to a <span class="value">stopped</span> event before it forces itself to terminate. This value is interpreted in seconds, so please enter it as such. Setting this value to <span class="value">0</span> tells &micro;Torrent to wait for an indefinite amount of time until it receives a response.</li>
	<li><a class="name" id="bt.shutdown_upnp_timeout" href="#bt.shutdown_upnp_timeout">bt.shutdown_upnp_timeout</a>: This option controls the maximum amount of time &micro;Torrent will wait, when exiting, for routers to respond to a request to unmap the listening ports before it forces itself to terminate. This value is interpreted in seconds, so please enter it as such. Setting this value to <span class="value">0</span> tells &micro;Torrent to wait for an indefinite amount of time until it receives a response.</li>
	<li><a class="name" id="bt.tcp_rate_control" href="#bt.tcp_rate_control">bt.tcp_rate_control</a>: Enabling this option tells &micro;Torrent to use information from the uTP transport as hints for limiting TCP transfer rates.</li>
	<li><a class="name" id="bt.transp_disposition" href="#bt.transp_disposition">bt.transp_disposition</a>: This option controls &micro;Torrent's level of bias towards using TCP or uTP for transporting data (assuming the peer at the other end of the connection supports both transport protocols). The following is a list of the accepted values:
		<ul class="sublist">
			<li><a class="name" id="bt.transp_disposition.1" href="#bt.transp_disposition.1">1</a> allows &micro;Torrent to attempt outgoing TCP connections</li>
			<li><a class="name" id="bt.transp_disposition.2" href="#bt.transp_disposition.2">2</a> allows &micro;Torrent to attempt outgoing uTP connections</li>
			<li><a class="name" id="bt.transp_disposition.4" href="#bt.transp_disposition.4">4</a> allows &micro;Torrent to accept incoming TCP connections</li>
			<li><a class="name" id="bt.transp_disposition.8" href="#bt.transp_disposition.8">8</a> allows &micro;Torrent to accept incoming uTP connections</li>
			<li><a class="name" id="bt.transp_disposition.16" href="#bt.transp_disposition.16">16</a> tells &micro;Torrent to use the new uTP header. This is an improved communication header, but is not backwards compatible with clients that do not understand it.</li>
		</ul>
		This option is interpreted as a bitfield, so values can be added together to obtain a combination of behaviors. Setting this value to <span class="value">255</span> guarantees that all behaviors are enabled.
	</li>
	<li><a class="name" id="bt.use_ban_ratio" href="#bt.use_ban_ratio">bt.use_ban_ratio</a>: This option tells &micro;Torrent to use <a href="#bt.ban_ratio">bt.ban_ratio</a> to decide when a peer gets banned after it has exceeded <a href="#bt.ban_threshold">bt.ban_threshold</a>.</li>
	<li><a class="name" id="bt.use_rangeblock" href="#bt.use_rangeblock">bt.use_rangeblock</a>: When enabled, &micro;Torrent will automatically attempt to determine whether an entire range of IP addresses should be banned for sending hashfailed pieces rather than banning individual IPs one at a time. When &micro;Torrent bans <span class="value">4</span> IPs from the same <span class="value">/24</span> CIDR block, it will ban the entire <span class="value">/24</span> CIDR block. When &micro;Torrent bans <span class="value">4</span> CIDR blocks of size <span class="value">/24</span> from the same <span class="value">/16</span> CIDR block, it will ban the entire <span class="value">/16</span> CIDR block. When &micro;Torrent bans <span class="value">4</span> CIDR blocks of size <span class="value">/16</span> from the same <span class="value">/8</span> CIDR block, it will ban the entire <span class="value">/8</span> CIDR block.</li>
	<li><a class="name" id="dht.rate" href="#dht.rate">dht.rate</a>: This option specifies the amount of bandwidth that DHT will use. The default value, <span class="value">-1</span>, tells &micro;Torrent to manage the bandwidth usage automatically based on your maximum upload rate. The automatic value is obtained by dividing your maximum upload rate by <span class="value">16</span>. This value is interpreted in bytes per second, so please enter it as such.</li>
	<li><a class="name" id="diskio.coalesce_write_size" href="#diskio.coalesce_write_size">diskio.coalesce_write_size</a>: This option determines the size threshold for which &micro;Torrent should write data out coalesced, and is relevant only if <a href="#diskio.coalesce_writes">diskio.coalesce_writes</a> is enabled. This value is interpreted in bytes per second, so please enter it as such.</li>
	<li><a class="name" id="diskio.coalesce_writes" href="#diskio.coalesce_writes">diskio.coalesce_writes</a>: This option tells &micro;Torrent to try to minimize the number of writes to disk by writing more data at once. It doesn't have any effect on download speeds, but might increase memory and CPU usage to achieve less disk writes.</li>
	<li><a class="name" id="diskio.flush_files" href="#diskio.flush_files">diskio.flush_files</a>: Enabling this option causes &micro;Torrent to close file handles every minute. It helps to reduce the effect of Windows managing the system cache badly for some people and causing apparent "memory leaks."</li>
	<li><a class="name" id="diskio.no_zero" href="#diskio.no_zero">diskio.no_zero</a>: Enabling this option causes &micro;Torrent to skip the zero-filling process for file allocation. This option works only on Windows XP or newer, and requires administrator privileges by default. However, it is possible to make this work on limited accounts by setting the "Perform volume maintenance tasks" policy appropriately in the Windows Group Policy Editor. Skipping zero-filling speeds up the file allocation process, but because the allocated files have shared read access, there is a risk that any sensitive data that may have once existed at that location in disk but isn't wiped will potentially be exposed for other applications and users to read, including those without volume maintenance privileges.</li>
	<li><a class="name" id="diskio.smart_hash" href="#diskio.smart_hash">diskio.smart_hash</a>: This option makes &micro;Torrent hash data from memory (if in the write queue) instead of flushing to disk, re-reading from disk, and then hashing. This should help reduce hard disk reads, especially when transferring at high speeds.</li>
	<li><a class="name" id="diskio.smart_sparse_hash" href="#diskio.smart_sparse_hash">diskio.smart_sparse_hash</a>: This option is a workaround for a problem in some versions of Windows that return incorrect data to &micro;Torrent regarding sparse files and the amount of data that has actually been completed on disk.</li>
	<li><a class="name" id="diskio.sparse_files" href="#diskio.sparse_files">diskio.sparse_files</a>: Enabling this option causes &micro;Torrent to allocate only the data that it writes, but will inform the filesystem of the file's size (so that it can attempt to reserve enough contiguous space on the hard drive without having to physically zero all of the space out for the file). Even though space is reserved for the file, no space will be taken for the unwritten parts of the file. Enabling this option may potentially lead to increased disk fragmentation in rare cases where the drive does not have enough free space available to honor the space reservation for sparse files. Here are some things to take note of when using this option:
		<ul class="sublist">
			<li>Sparse files work only on partitions that are formatted as NTFS.</li>
			<li>Hash checking sparse files tends to be quicker than hash checking pre-allocated files, as &micro;Torrent won't have to hash zeroed-out pre-allocated data.</li>
			<li>On Windows Vista, sparse files can cause &micro;Torrent to run into a <a href="FAQ_06.html#In_the_torrent_job_status_I_get_Error:_The_requested_operation_could_not_be_completed_due_to_a_file_system_limitation">file system limitation</a>.</li>
			<li>If you are using a non-administrator account with a disk quota, sparse files won't work, and the file will still get fully allocated. This is a limitation with Windows that &micro;Torrent can't do anything about.</li>
			<li>This option cannot be used in conjunction with <a href="AppendixA_02_01.html#When_Downloading.Pre-allocate_all_files">pre-allocate all files</a>. If both options are enabled simultaneously, pre-allocation will take precedence.</li>
			<li>When used in conjunction with <a href="AppendixA_02_12.html#bt.compact_allocation">bt.compact_allocation</a>, &micro;Torrent will reserve space for each file in the filesystem, but it will continue to use compact writes.</li>
		</ul>
	</li>
	<li><a class="name" id="diskio.use_partfile" href="#diskio.use_partfile">diskio.use_partfile</a>: This option is used to store data that is downloaded from files that you told &micro;Torrent to skip. This is necessary to prevent the file from being allocated. It separately stores the parts of the skipped files that come with a piece, since &micro;Torrent must download and save the entire piece in order to confirm that it is uncorrupted, and each piece can contain data from multiple files. The partfile is removed when you remove the torrent job from the torrent job list.</li>
	<li><a class="name" id="gui.auto_restart" href="#gui.auto_restart">gui.auto_restart</a>: This option configures crash recovery in &micro;Torrent. When this option is enabled, if &micro;Torrent crashes while it is minimized and the user has been idle at the computer for more than <span class="value">1</span> minute, this option will cause &micro;Torrent to automatically restart, and a notification of the crash (without a crash dump or any personally identifiable information) will be sent to the developers. If &micro;Torrent crashes more than once within an hour, this option will not cause it to automatically restart again after the first crash, as such frequency of crashes is indicative of some important underlying problem that should not be ignored by the user. In this situation, &micro;Torrent will fall back to the regular behavior (as if this option were disabled), where it displays a crash dialog that allows the user to choose how to proceed.</li>
	<li><a class="name" id="gui.bypass_search_redirect" href="#gui.bypass_search_redirect">gui.bypass_search_redirect</a>: Enabling this option tells &micro;Torrent to search directly on the selected search engine rather than being redirected through <span class="value">http://search.utorrent.com</span>.</li>
	<li><a class="name" id="gui.compat_diropen" href="#gui.compat_diropen">gui.compat_diropen</a>: If you experience abnormal behaviors while browsing directories in &micro;Torrent, such as a blank browsing dialog, try enabling this option.</li>
	<li><a class="name" id="gui.default_del_action" href="#gui.default_del_action">gui.default_del_action</a>: This option tells &micro;Torrent how it should remove torrent jobs when pressing the <a href="AppendixA_01_02.html#Remove">Remove button</a> or <span class="key">Delete</span> on your keyboard. Note that any value above <span class="value">3</span> will cause the "<em>Remove</em>" button and the <span class="key">Delete</span> button on your keyboard to do nothing in &micro;Torrent. To be safer, you'd best be setting this option in the GUI through <a href="AppendixA_01_02.html#Remove">the toolbar method</a>.
		<ul class="sublist">
			<li><a class="name" id="gui.default_del_action.0" href="#gui.default_del_action.0">0</a> means "<em>Remove</em>"</li>
			<li><a class="name" id="gui.default_del_action.1" href="#gui.default_del_action.1">1</a> means "<em>Remove and delete .torrent</em>"</li>
			<li><a class="name" id="gui.default_del_action.2" href="#gui.default_del_action.2">2</a> means "<em>Remove and delete Data</em>"</li>
			<li><a class="name" id="gui.default_del_action.3" href="#gui.default_del_action.3">3</a> means "<em>Remove and delete .torrent + Data</em>"</li>
		</ul>
	</li>
	<li><a class="name" id="gui.delete_to_trash" href="#gui.delete_to_trash">gui.delete_to_trash</a>: Enabling this option tells &micro;Torrent to attempt to delete files to the Recycle Bin rather than directly erasing them from the disk. It is easier to set this option in the GUI through <a href="AppendixA_01_02.html#Remove.Move_to_trash_if_possible">the toolbar method</a>.</li>
	<li><a class="name" id="gui.graph_legend" href="#gui.graph_legend">gui.graph_legend</a>: This option tells &micro;Torrent to draw a legend over the graphs displayed in the <a href="AppendixA_01_05_06.html">Speed tab</a> to describe each of the lines drawn on the graph.</li>
	<li><a class="name" id="gui.graph_overhead" href="#gui.graph_overhead">gui.graph_overhead</a>: If enabled, this option tells &micro;Torrent to draw communication overhead lines in the <a href="AppendixA_01_05_06.html">Speed</a> tab's transfer rate graphs. Otherwise, only the "<em>Network Overhead</em>" graph will display information about communication overhead.</li>
	<li><a class="name" id="gui.graphic_progress" href="#gui.graphic_progress">gui.graphic_progress</a>: This option tells &micro;Torrent to draw a progress bar for each torrent job in the torrent jobs list, behind <a href="AppendixA_01_04.html#Done">the Done column</a>.</li>
	<li><a class="name" id="gui.log_date" href="#gui.log_date">gui.log_date</a>: This option causes the date to be included in the timestamp shown in the <a href="AppendixA_01_05_07.html">Logger</a> tab.</li>
	<li><a class="name" id="gui.piecebar_progress" href="#gui.piecebar_progress">gui.piecebar_progress</a>: If enabled, this option tells &micro;Torrent to draw the <a href="AppendixA_01_05_01.html#Graphical_Progress_Bars.lower_Downloaded_Bar">lower Downloaded bar</a> as the progress bar for each torrent job in the torrent jobs list, behind <a href="AppendixA_01_04.html#Done">the Done column</a>. This option works only if <a href="#gui.graphic_progress">gui.graphic_progress</a> is enabled, and will hide the percentage from the column.</li>
	<li><a class="name" id="gui.report_problems" href="#gui.report_problems">gui.report_problems</a>: If enabled, this option tells &micro;Torrent to report hangs in the user interface thread back to the &micro;Torrent servers anonymously. The information sent is not personally identifiable, but can assist the developers in fixing (or identifying the cause of) the user interface hang. Whenever a report is sent to the server, a message is added to the <a href="AppendixA_01_05_07.html">Logger tab</a>.</li>
	<li><a class="name" id="gui.tall_category_list" href="#gui.tall_category_list">gui.tall_category_list</a>: This option toggles the <a href="AppendixA_01_03.html">Category List</a>'s height between short and tall. When taller, the Category List displaces the <a href="AppendixA_01_05.html">Detailed Info Pane</a>'s left-hand side. When shorter, the Category List's lower section is displaced by the Detailed Info pane. A taller list might be more optimal for users with many labels and RSS feeds</li>
	<li><a class="name" id="gui.transparent_graph_legend" href="#gui.transparent_graph_legend">gui.transparent_graph_legend</a>: If enabled, this option tells &micro;Torrent to draw a transparent background behind the legend (otherwise, the background is opaque).</li>
	<li><a class="name" id="gui.update_rate" href="#gui.update_rate">gui.update_rate</a>: This option controls the amount of time between each update of the &micro;Torrent main window. The higher it is, the less frequently &micro;Torrent updates the main window, meaning that if you select <span class="value">1000</span>, the information displayed on the main window is at most <span class="value">1000</span> milliseconds (<span class="value">1</span> second) old. For users of slower computers, you might want to increase this number to decrease resource usage when the main window is displayed. Any value below <span class="value">500</span> will be ignored (and <span class="value">500</span> will be used instead).</li>
	<li><a class="name" id="ipfilter.enable" href="#ipfilter.enable">ipfilter.enable</a>: This option, when enabled, tells &micro;Torrent to load <a href="AppendixB_01.html#External_Files.Extended_Functionality.ipfilter.dat">ipfilter.dat</a> and apply the rules on connections established after it is loaded. Note that disabling and re-enabling this option will force &micro;Torrent to reload ipfilter.dat.</li>
	<li><a class="name" id="isp.bep22" href="#isp.bep22">isp.bep22</a>: This option enables Local Tracker Discovery, allowing &micro;Torrent to attempt to discover ISP-local trackers via a series of reverse DNS lookups. The ISP-local tracker can return a list of peers and caches (most likely ISP-local). Note that if your ISP is known to interfere with BitTorrent traffic, careful consideration should be taken in deciding to enable this option. Announcing to a ISP-hosted tracker indicates to the ISP that you are using BitTorrent, and as such, can make it easier for the ISP to interfere. Private torrent jobs are not announced to local trackers.</li>
	<li><a class="name" id="net.bind_ip" href="#net.bind_ip">net.bind_ip</a>: If your computer setup requires that you use a specific LAN adapter for incoming connections, you may specify that adapter's IP address here.</li>
	<li><a class="name" id="net.calc_overhead" href="#net.calc_overhead">net.calc_overhead</a>: If enabled, this option tells &micro;Torrent to include communication overhead in the transfer rate calculations.</li>
	<li><a class="name" id="net.disable_ipv6" href="#net.disable_ipv6">net.disable_ipv6</a>: If enabled, this option tells &micro;Torrent to not use IPv6.</li>
	<li><a class="name" id="net.discoverable" href="#net.discoverable">net.discoverable</a>: If enabled, this option tells &micro;Torrent to listen on one of a sequence of well-known ports for incoming connections in addition to the <a href="AppendixA_02_04.html#Listening_Port">standard</a> and <a href="AppendixA_02_10.html#Connectivity.Alternative_listening_port">alternative</a> listening ports. Because the sequence of ports is well-known to applications attempting to interface with &micro;Torrent, it allows for such applications to connect to &micro;Torrent with less effort on the user's part.</li>
	<li><a class="name" id="net.limit_excludeslocal" href="#net.limit_excludeslocal">net.limit_excludeslocal</a>: This option decides whether &micro;Torrent should apply the <a href="AppendixA_02_07.html">Transfer Cap</a> limits to traffic between itself and peers on the local network. Peers are considered local if they are discovered by Local Peer Discovery, or if they are on the same LAN as the client.</li>
	<li><a class="name" id="net.low_cpu" href="#net.low_cpu">net.low_cpu</a>: Enabling this option reduces CPU usage slightly. You may achieve faster speeds with this option disabled. In general, this option is useless for most people unless they have extremely fast connections.</li>
	<li><a class="name" id="net.max_halfopen" href="#net.max_halfopen">net.max_halfopen</a>: This option specifies how many connections &micro;Torrent should attempt to establish simultaneously at any given time. On systems running Windows XP with Service Pack 2 (SP2) or newer, if your TCPIP.sys file is unpatched, you should leave this option at its default value.</li>
	<li><a class="name" id="net.outgoing_ip" href="#net.outgoing_ip">net.outgoing_ip</a>: If your computer setup requires that you use a specific LAN adapter for outgoing connections, you may specify that adapter's IP address here. Note that Windows will sometimes ignore this setting and use other adapters due to their binding orders in Windows. To fix this, read Microsoft's knowledge base article <a href="ExternalLinks.html#Microsoft">KB894564</a>.</li>
	<li><a class="name" id="net.outgoing_max_port" href="#net.outgoing_max_port">net.outgoing_max_port</a>: This sets the upper limit for the outgoing port range. If this option is set to some invalid port number or some value less than <a href="#net.outgoing_port">net.outgoing_port</a>, it gets ignored, and only <a href="#net.outgoing_port">net.outgoing_port</a> gets looked at (meaning the outgoing port "range" will actually be a single outgoing port).</li>
	<li><a class="name" id="net.outgoing_port" href="#net.outgoing_port">net.outgoing_port</a>: This option specifies the port that &micro;Torrent should use to make outgoing connections. Normally, &micro;Torrent selects a port from the ephemeral port range at random. "This can be used with full cone NAT routers to reduce the number of NAT table entries and thus prevent cashes on some router models. When the outgoing port is bound to the same as the incoming port that might even solve NAT problems on full cone NAT routers" (<a href="ExternalLinks.html#AzureusWiki">Advanced Network Settings</a> on AzureusWiki). This option only works on Windows 2000 and above. This option is ignored if it is not a valid port number.</li>
	<li><a class="name" id="net.upnp_tcp_only" href="#net.upnp_tcp_only">net.upnp_tcp_only</a>: This option disables automatic forwarding of the listening port for UDP via UPnP, telling &micro;Torrent to forward the port for TCP only. This fixes an issue with some broken routers that overwrite the TCP forwarding with the UDP forwarding.</li>
	<li><a class="name" id="net.utp_dynamic_packet_size" href="#net.utp_dynamic_packet_size">net.utp_dynamic_packet_size</a>: If enabled, this option allows &micro;Torrent to adjust the uTP packet size in response to connection conditions detected through information gathered by uTP, changing up to as often as <a href="#net.utp_packet_size_interval">net.utp_packet_size_interval</a> allows. If disabled, &micro;Torrent uses the initial packet size for all uTP communication, as set by <a href="#net.utp_initial_packet_size">net.utp_initial_packet_size</a>.</li>
	<li><a class="name" id="net.utp_initial_packet_size" href="#net.utp_initial_packet_size">net.utp_initial_packet_size</a>: This controls the initial size of the uTP packets that &micro;Torrent uses when initiating a uTP connection. If <a href="#net.utp_dynamic_packet_size">net.utp_dynamic_packet_size</a> is enabled, packet sizes can change dynamically during the lifetime of the uTP connection, depending on the connection conditions; this option only controls how &micro;Torrent starts off. This option is interpreted as a multiplier of <span class="value">150</span> bytes, so please enter it as such. Any value below <span class="value">1</span> will be ignored (and <span class="value">1</span> will be used instead), and any value above <span class="value">8</span> will be ignored (and <span class="value">8</span> will be used instead). Effectively, that means that the initial packet sizes selectable by the user are the multiples of <span class="value">150</span> bytes between (and including) <span class="value">150</span> bytes and <span class="value">1200</span> bytes.</li>
	<li><a class="name" id="net.utp_packet_size_interval" href="#net.utp_packet_size_interval">net.utp_packet_size_interval</a>: This controls how often uTP alters its packet size in response to network conditions, assuming <a href="#net.utp_dynamic_packet_size">net.utp_dynamic_packet_size</a> is enabled. This value is interpreted in seconds, so please enter it as such.</li>
	<li><a class="name" id="net.utp_receive_target_delay" href="#net.utp_receive_target_delay">net.utp_receive_target_delay</a>: This controls the threshold detected connection receive delay that, if surpassed, will cause &micro;Torrent to throttle back on bandwidth usage. The higher this option is set, the more forgiving &micro;Torrent will be toward connection delays, meaning that it will be less likely to throttle back on bandwidth usage. Receive delay is detected by tracking the changes in the deltas between uTP packet timestamps and packet receive times. This option is interpreted in milliseconds, to please enter it as such.</li>
	<li><a class="name" id="net.utp_target_delay" href="#net.utp_target_delay">net.utp_target_delay</a>: This option controls the threshold detected connection send delay that, if surpassed, will cause &micro;Torrent to throttle back on bandwidth usage. The higher this option is set, the more forgiving &micro;Torrent will be toward connection delays, meaning that it will be less likely to throttle back on bandwidth usage. Send delay is the receive delay as observed by recipient uTP peers, which is reported back to the client by the recipient peers. This option is interpreted in milliseconds, so please enter it as such.</li>
	<li><a class="name" id="net.wsaevents" href="#net.wsaevents">net.wsaevents</a>: This option is used for tweaking if you are experiencing odd firewall issues. Decrease the value one by one to see if it helps.</li>
	<li><a class="name" id="peer.disconnect_inactive" href="#peer.disconnect_inactive">peer.disconnect_inactive</a>: Enabling this option tells &micro;Torrent to disconnect from a peer that is not transferring with you after <a href="#peer.disconnect_inactive_interval">peer.disconnect_inactive_interval</a> seconds of inactivity. A peer gets disconnected by this option only if <a href="AppendixA_02_05.html#Number_of_Connections">the connection limit</a> has been reached.</li>
	<li><a class="name" id="peer.disconnect_inactive_interval" href="#peer.disconnect_inactive_interval">peer.disconnect_inactive_interval</a>: This option sets the amount of time &micro;Torrent should wait before breaking an inactive connection. This value is interpreted in seconds, so please enter it as such. Any value below <span class="value">300</span> will be ignored (and <span class="value">300</span> will be used instead).</li>
	<li><a class="name" id="peer.lazy_bitfield" href="#peer.lazy_bitfield">peer.lazy_bitfield</a>: Some ISPs block seeding by looking for the complete bitfield and closing the connection. When enabled, &micro;Torrent does not send the complete bitfield, but a sample of it, so as to prevent blocking of seeding.</li>
	<li><a class="name" id="peer.resolve_country" href="#peer.resolve_country">peer.resolve_country</a>: Enabling this option tells &micro;Torrent to use an Internet database of IP addresses (a DNSBL) to determine a peer's country. Even if the settings directory contains <a href="AppendixB_01.html#External_Files.Interface_Customization.flags.conf">flags.conf</a> and <a href="AppendixB_01.html#External_Files.Interface_Customization.flags.bmp">flags.bmp</a>, this option will take precedence, and the internal flag images will be used instead.</li>
	<li><a class="name" id="queue.dont_count_slow_dl" href="#queue.dont_count_slow_dl">queue.dont_count_slow_dl</a>: Enabling this option tells &micro;Torrent to ignore slow downloading torrent jobs as part of the queue. If a torrent job is downloading at less than the value specified by <a href="#queue.slow_dl_threshold">queue.slow_dl_threshold</a>, it will not prevent the next item in the queue from starting.</li>
	<li><a class="name" id="queue.dont_count_slow_ul" href="#queue.dont_count_slow_ul">queue.dont_count_slow_ul</a>: Enabling this option tells &micro;Torrent to ignore slow uploading torrent jobs as part of the queue. If a torrent job is uploading at less than the value specified by <a href="#queue.slow_ul_threshold">queue.slow_ul_threshold</a>, it will not prevent the next item in the queue from starting.</li>
	<li><a class="name" id="queue.prio_no_seeds" href="#queue.prio_no_seeds">queue.prio_no_seeds</a>: Enabling this option gives torrent jobs without seeds higher priority when seeding than other torrent jobs.</li>
	<li><a class="name" id="queue.slow_dl_threshold" href="#queue.slow_dl_threshold">queue.slow_dl_threshold</a>: The rate below which &micro;Torrent should consider a torrent job to be downloading slowly. If &micro;Torrent is downloading at a rate above this value, it is considered to be actively downloading. This value is interpreted in bytes per second, so please enter it as such.</li>
	<li><a class="name" id="queue.slow_ul_threshold" href="#queue.slow_ul_threshold">queue.slow_ul_threshold</a>: The rate below which &micro;Torrent should consider a torrent job to be uploading slowly. If &micro;Torrent is uploading at a rate above this value, it is considered to be actively uploading. This value is interpreted in bytes per second, so please enter it as such.</li>
	<li><a class="name" id="queue.use_seed_peer_ratio" href="#queue.use_seed_peer_ratio">queue.use_seed_peer_ratio</a>: When this option is enabled, &micro;Torrent will determine the seeding queue order based on the ratio of the number of seeds to the number of peers connected in the swarm. The lower the seed:peer ratio is for a torrent job, the higher priority it will be given in the seeding queue. If a torrent job has <span class="value">0</span> peers and <a href="#queue.dont_count_slow_ul">queue.dont_count_slow_ul</a> is disabled, it will be given the lowest priority. Otherwise, if the aforementioned option is enabled, the torrent job is treated as if there is <span class="value">1</span> peer in the swarm.</li>
	<li><a class="name" id="rss.feed_as_default_label" href="#rss.feed_as_default_label">rss.feed_as_default_label</a>: When this option is enabled, &micro;Torrent will use an RSS feed's name as the default label for any torrent jobs added without a label from the RSS feed.</li>
	<li><a class="name" id="rss.smart_repack_filter" href="#rss.smart_repack_filter">rss.smart_repack_filter</a>: This option tells &micro;Torrent to select an RSS item designated as REPACK over an item without the REPACK designation if both show up in the RSS feed.</li>
	<li><a class="name" id="rss.update_interval" href="#rss.update_interval">rss.update_interval</a>: This option sets the length of time &micro;Torrent should wait between each RSS feed update check. This value is interpreted in minutes, so please enter it as such. Any value below <span class="value">5</span> will be ignored (and <span class="value">5</span> will be used instead).</li>
	<li><a class="name" id="sys.enable_wine_hacks" href="#sys.enable_wine_hacks">sys.enable_wine_hacks</a>: This option enables several workarounds for bugs found in Wine (like list-view flickering, or improper display of files list-view in Add New Torrent dialog). This option has no effect on Windows. For changes to this option to take effect, you must restart &micro;Torrent.</li>
	<li><a class="name" id="webui.token_auth" href="#webui.token_auth">webui.token_auth</a>: This option enables the token authentication system for the Web UI, which is a method for preventing cross-site request forgery attacks that use the authenticated browser session to issue commands to &micro;Torrent. This option breaks backwards compatibility with applications that are unaware of the token system.</li>
</ul>

		</div>
		<div class="navi" id="naviBot">
			<ul>
				<li><a href="AppendixA_02_11.html">&laquo;&nbsp; Previous</a></li>
				<li><a href="AppendixA_02_12_01.html">Next &nbsp;&raquo;</a></li>
			</ul>
		</div>
	</div>
</body>
</html>
